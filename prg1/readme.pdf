\documentclass[]{article}

%opening
\title{Assignment 1:Karttaretki (mapping hike)}
\author{Max Gratschew 283272 }

\begin{document}

\maketitle


\section{Data structures used in the assignment}
My implementation has two main data structures. \newline
 \emph{1.} For storing the \textbf{places}, I've used an unordered map, as place ids as key, and a Place struct as value, with members representing the data of one place's name, type and coordinates.\newline
\emph{2.} For storing the \textbf{areas}. I've used an unordered map, as area ids as key, and a Area struct as value, with members representing the data of one area's name, coordinates, truth value if a sub area or not, parent's id, and a vector of sub areas.

I decided to go with \textbf{unordered map} on both of the datastructures because not only is it logical to have a map style datastructure, it's also the best option time complexity wise in my opinion. \textbf{unordered map} offers mostly constant Big O notation  for basic operations like insert, access by key and remove by key. 

The assignment also had many functions that required vector of place ids or vector of area ids. I also kept up vectors of ids for both unordered maps, containing the keys of previously mentioned. There was two vectors for placeids, other one sorted alphabetically and other one by the coordinates.

For sorting I used \textbf{std::sort}, with lambda function to compare the vectors' elements in asked way. This was the slowest algorithm I've used in this assignment. I tried to bring down the performance time by using two boolean variables for both vectors sorted alphabetically or by the coordinates. after each sort the boolean values were set to true, so no unnecessary sorting would happen. When these vectors were modified, or some information of these places/areas had changed, the boolean value would've been set to false. 

Many of the functions had just to do with \textbf{unordered map's} or \textbf{vector's} own constant member functions. I think you will get a better understanding of the choices I made when you see the actual code and the short rationales for estimate in the headerfile.
\end{document}
